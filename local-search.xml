<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>开源周记#1: 耳切法 Earcut</title>
    <link href="/2025/01/02/%E5%BC%80%E6%BA%90%E5%91%A8%E8%AE%B0-1-%E8%80%B3%E5%88%87%E6%B3%95/"/>
    <url>/2025/01/02/%E5%BC%80%E6%BA%90%E5%91%A8%E8%AE%B0-1-%E8%80%B3%E5%88%87%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1 id="Earcut"><a href="#Earcut" class="headerlink" title="Earcut"></a>Earcut</h1><p>一个快速的、仅头文件的多边形三角剖分库，<a href="https://github.com/mapbox/earcut#earcut">earcut.js</a>版 的 C++ 封装<br><a href="https://github.com/mapbox/earcut.hpp">earcut.hpp</a>。</p><p>该库实现了一种改进的耳切算法，通过 z 序曲线哈希进行优化，并扩展到可以处理孔洞、扭曲多边形、退化情况和自相交问题，但其处理方式并不能保证三角剖分的正确性，但对于像地理形状这样的实际数据，总是试图产生可接受的结果。</p><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;earcut.hpp&gt;</span></span><br><span class="hljs-comment">// 使用的坐标类型</span><br><span class="hljs-keyword">using</span> coord = <span class="hljs-type">double</span>;<br><span class="hljs-comment">// 索引类型，默认为uint32_t</span><br><span class="hljs-keyword">using</span> n = <span class="hljs-type">uint32_t</span>;<br><span class="hljs-comment">// 定义点类型</span><br><span class="hljs-keyword">using</span> point = std::array&lt;coord, <span class="hljs-number">2</span>&gt;;<br>std::vector&lt; std::vector&lt; point&gt; &gt; polygon;<br><span class="hljs-comment">// 填充多边形结构，任何环绕顺序都有效</span><br><span class="hljs-comment">// 第一条折线定义主多边形</span><br>polygon.<span class="hljs-built_in">push_back</span>( &#123; &#123; <span class="hljs-number">100</span>, <span class="hljs-number">0</span> &#125;, &#123; <span class="hljs-number">100</span>, <span class="hljs-number">100</span> &#125;, &#123; <span class="hljs-number">0</span>, <span class="hljs-number">100</span> &#125;, &#123; <span class="hljs-number">0</span>, <span class="hljs-number">0</span> &#125; &#125; );<br><span class="hljs-comment">// 后续折线定义孔洞</span><br>polygon.<span class="hljs-built_in">push_back</span>( &#123; &#123; <span class="hljs-number">75</span>, <span class="hljs-number">25</span> &#125;, &#123; <span class="hljs-number">75</span>, <span class="hljs-number">75</span> &#125;, &#123; <span class="hljs-number">25</span>, <span class="hljs-number">75</span> &#125;, &#123; <span class="hljs-number">25</span>, <span class="hljs-number">25</span> &#125; &#125; );<br><span class="hljs-comment">// 运行三角剖分</span><br>std::vector&lt; n&gt; indices = mapbox::<span class="hljs-built_in">earcut</span>&lt; n&gt; ( polygon );<br></code></pre></td></tr></table></figure><h2 id="功能特点"><a href="#功能特点" class="headerlink" title="功能特点"></a>功能特点</h2><ul><li><p>适用多边形类型广泛：可以对具有任何环绕顺序的简单平面多边形进行三角剖分，包括带有孔洞的多边形。甚至对于非简单多边形，也能返回一个可靠的、可接受的解决方案。</p></li><li><p>平面限制及处理方法：该库是基于 2D 平面进行工作的。如果遇到三维或更多维度的数据，使用者可以在进行三角剖分之前将其投影到 2D 平面上，或者选择使用更适合的库来完成任务，例如 CGAL。</p></li></ul><h2 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h2><ul><li>地理信息系统（GIS）：可用于处理地图中的多边形数据，如将复杂的地理区域划分为三角形网格，以便进行地形渲染、空间分析等操作。</li><li>计算机图形学：在 3D 建模、游戏开发等领域，可将二维的多边形模型进行三角剖分，为后续的渲染和物理模拟等提供基础数据结构。</li><li>有限元分析：将复杂的几何形状划分为简单的三角形单元，以便进行数值计算和模拟，如结构力学分析、热传导分析等。</li></ul><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p><img src="/images/earcut.png" alt="earcut"></p>]]></content>
    
    
    <categories>
      
      <category>opensource</category>
      
    </categories>
    
    
    <tags>
      
      <tag>earcut</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>OpenMVS</title>
    <link href="/2024/10/30/OpenMVS/"/>
    <url>/2024/10/30/OpenMVS/</url>
    
    <content type="html"><![CDATA[<h1 id="OpenMVS"><a href="#OpenMVS" class="headerlink" title="OpenMVS"></a>OpenMVS</h1><p>open Multi-View Stereo reconstruction library 开源多视图立体重建库</p><p><img src="/images/related_lib.png" alt="相关三维重建的库"></p><p>链接地址: <a href="https://github.com/cdcseacave/openMVS">https://github.com/cdcseacave/openMVS</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>cesium demo</title>
    <link href="/2024/10/30/test/"/>
    <url>/2024/10/30/test/</url>
    
    <content type="html"><![CDATA[<p>测试 cesium demo</p>]]></content>
    
    
    <categories>
      
      <category>demo</category>
      
      <category>cesium</category>
      
    </categories>
    
    
    <tags>
      
      <tag>cesium</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>高精度DEM下载</title>
    <link href="/2024/10/30/%E9%AB%98%E7%B2%BE%E5%BA%A6DEM%E4%B8%8B%E8%BD%BD/"/>
    <url>/2024/10/30/%E9%AB%98%E7%B2%BE%E5%BA%A6DEM%E4%B8%8B%E8%BD%BD/</url>
    
    <content type="html"><![CDATA[<p>本文介绍从NASA阿拉斯加卫星设备处网站下载高精度DEM数据，下载的数据精度是12.5米分辨率。</p><p>目前国内大部分可以下载的dem数据都是30米或90米分辨率的，对于更高精度的数据要不就是需要付费下载，要不就是涉密数据无法获取。</p><p>下载地址：<a href="https://vertex.daac.asf.alaska.edu/#">https://vertex.daac.asf.alaska.edu/# </a></p><p>ASF（Alaska Satellite Facility） DAAC是美国国家航空航天局阿拉斯加卫星设备处用来存放数据的一个网站接口，具有Sentinel-1、ALOS、RADASAT、SEASAT等雷达遥感数据。</p><ol><li><p>如果没有账号，首先需要进行注册（注册过程不详细描述）</p></li><li><p>使用注册好的账号登录</p></li><li><p>选择需要下载的区域</p></li></ol><p>Search Type选择：Geographic；Dataset选择：ALOS PALSAR</p><p>下载地形dem数据</p><p>在地图上点击选择需要下载的格网，在右侧列表中找到Hi-Res Terrain Corrected进行下载：</p>]]></content>
    
    
    <categories>
      
      <category>GIS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>DEM</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>cgal obb example</title>
    <link href="/2024/07/17/cgal-obb-example/"/>
    <url>/2024/07/17/cgal-obb-example/</url>
    
    <content type="html"><![CDATA[<p><code>obb</code>方向包围盒，不同于<code>AABB</code>包围盒，<code>OBB</code>最大特点是它的方向的任意性，这使得它可以根据被包围对象的形状特点尽可能紧密的包围对象，但同时也使得它的相交测试变得复杂。</p><p>使用<code>cgal</code>计算<code>obb</code>的代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;CGAL/Exact_predicates_inexact_constructions_kernel.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;CGAL/Surface_mesh.h&gt;</span></span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;CGAL/optimal_bounding_box.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;CGAL/Polygon_mesh_processing/triangulate_faces.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;CGAL/Polygon_mesh_processing/measure.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;CGAL/Polygon_mesh_processing/IO/polygon_mesh_io.h&gt;</span></span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;CGAL/Real_timer.h&gt;</span></span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;fstream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><br><span class="hljs-keyword">namespace</span> PMP = CGAL::Polygon_mesh_processing;<br><br><span class="hljs-keyword">typedef</span> CGAL::Exact_predicates_inexact_constructions_kernel    K;<br><span class="hljs-keyword">typedef</span> K::Point_3                                             Point;<br><br><span class="hljs-keyword">typedef</span> CGAL::Surface_mesh&lt;Point&gt;                              Surface_mesh;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-type">int</span> argc, <span class="hljs-type">char</span>** argv)</span></span><br><span class="hljs-function"></span>&#123;<br>  <span class="hljs-type">const</span> std::string filename = (argc &gt; <span class="hljs-number">1</span>) ? argv[<span class="hljs-number">1</span>] : CGAL::<span class="hljs-built_in">data_file_path</span>(<span class="hljs-string">&quot;meshes/pig.off&quot;</span>);<br><br>  Surface_mesh sm;<br>  <span class="hljs-keyword">if</span>(!PMP::IO::<span class="hljs-built_in">read_polygon_mesh</span>(filename, sm) || sm.<span class="hljs-built_in">is_empty</span>())<br>  &#123;<br>    std::cerr &lt;&lt; <span class="hljs-string">&quot;Invalid input file.&quot;</span> &lt;&lt; std::endl;<br>    <span class="hljs-keyword">return</span> EXIT_FAILURE;<br>  &#125;<br><br>  CGAL::Real_timer timer;<br>  timer.<span class="hljs-built_in">start</span>();<br><br>  <span class="hljs-comment">// Compute the extreme points of the mesh, and then a tightly fitted oriented bounding box</span><br>  std::array&lt;Point, 8&gt; obb_points;<br>  CGAL::<span class="hljs-built_in">oriented_bounding_box</span>(sm, obb_points,<br>                              CGAL::parameters::<span class="hljs-built_in">use_convex_hull</span>(<span class="hljs-literal">true</span>));<br><br>  std::cout &lt;&lt; <span class="hljs-string">&quot;Elapsed time: &quot;</span> &lt;&lt; timer.<span class="hljs-built_in">time</span>() &lt;&lt; std::endl;<br><br>  <span class="hljs-comment">// Make a mesh out of the oriented bounding box</span><br>  Surface_mesh obb_sm;<br>  CGAL::<span class="hljs-built_in">make_hexahedron</span>(obb_points[<span class="hljs-number">0</span>], obb_points[<span class="hljs-number">1</span>], obb_points[<span class="hljs-number">2</span>], obb_points[<span class="hljs-number">3</span>],<br>                        obb_points[<span class="hljs-number">4</span>], obb_points[<span class="hljs-number">5</span>], obb_points[<span class="hljs-number">6</span>], obb_points[<span class="hljs-number">7</span>], obb_sm);<br>  std::<span class="hljs-built_in">ofstream</span>(<span class="hljs-string">&quot;obb.off&quot;</span>) &lt;&lt; obb_sm;<br>  <span class="hljs-comment">//三角化多边形面</span><br>  PMP::<span class="hljs-built_in">triangulate_faces</span>(obb_sm);<br>  std::<span class="hljs-built_in">ofstream</span>(<span class="hljs-string">&quot;obb_triangle.off&quot;</span>) &lt;&lt; obb_sm;<br>  <span class="hljs-comment">//计算体积</span><br>  std::cout &lt;&lt; <span class="hljs-string">&quot;Volume: &quot;</span> &lt;&lt; PMP::<span class="hljs-built_in">volume</span>(obb_sm) &lt;&lt; std::endl;<br><br>  <span class="hljs-keyword">return</span> EXIT_SUCCESS;<br>&#125;<br><br></code></pre></td></tr></table></figure><p><img src="/images/pig.png" alt="pig.off"></p><p><img src="/images/pig_obb.png" alt="pig.off+obb.off"></p>]]></content>
    
    
    <categories>
      
      <category>cgal</category>
      
    </categories>
    
    
    <tags>
      
      <tag>obb</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo admin</title>
    <link href="/2024/07/15/Hexo-admin/"/>
    <url>/2024/07/15/Hexo-admin/</url>
    
    <content type="html"><![CDATA[<h2 id="Setup"><a href="#Setup" class="headerlink" title="Setup"></a>Setup</h2><p><code>npm install --save hexo-admin</code></p><h2 id="Start"><a href="#Start" class="headerlink" title="Start"></a>Start</h2><p><code>hexo s</code></p><p><a href="http://localhost:4000/admin/">http://localhost:4000/admin/</a></p>]]></content>
    
    
    <categories>
      
      <category>Writing skills</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LaTex Setup</title>
    <link href="/2024/07/15/LaTex-Setup/"/>
    <url>/2024/07/15/LaTex-Setup/</url>
    
    <content type="html"><![CDATA[<h2 id="texlive-下载"><a href="#texlive-下载" class="headerlink" title="texlive 下载"></a>texlive 下载</h2><p>texlive.iso:<a href="https://mirrors.tuna.tsinghua.edu.cn/CTAN/systems/texlive/Images/">https://mirrors.tuna.tsinghua.edu.cn/CTAN/systems/texlive/Images/</a></p><h2 id="texstudio-下载"><a href="#texstudio-下载" class="headerlink" title="texstudio 下载"></a>texstudio 下载</h2><p>texstudio-4.8.1-win-qt6.exe<a href="https://mirrors.tuna.tsinghua.edu.cn/github-release/texstudio-org/texstudio/LatestRelease/">https://mirrors.tuna.tsinghua.edu.cn/github-release/texstudio-org/texstudio/LatestRelease/</a></p><h2 id="测试-texlive"><a href="#测试-texlive" class="headerlink" title="测试 texlive"></a>测试 texlive</h2><p><code>latex -v</code></p><h2 id="测试-texstudio"><a href="#测试-texstudio" class="headerlink" title="测试 texstudio"></a>测试 texstudio</h2><p><code>\usepackage[ruled,linesnumbered]&#123;algorithm2e&#125;</code></p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs latex"><span class="hljs-keyword">\begin</span>&#123;algorithm&#125;[t]<br><span class="hljs-keyword">\caption</span>&#123;Event Detection&#125;<br><span class="hljs-keyword">\label</span>&#123;algo:event&#125;<br><span class="hljs-keyword">\LinesNumbered</span><br><span class="hljs-keyword">\KwIn</span>&#123;FFT Bins <span class="hljs-built_in">$</span>B<span class="hljs-built_in">_</span>&#123;1&#125;, B<span class="hljs-built_in">_</span>&#123;2&#125;, B<span class="hljs-built_in">_</span>&#123;3&#125;, ..., B<span class="hljs-built_in">_</span>&#123;n&#125;<span class="hljs-built_in">$</span>&#125;<br><span class="hljs-keyword">\KwOut</span>&#123;Event start point <span class="hljs-built_in">$</span>S<span class="hljs-built_in">$</span>, end point <span class="hljs-built_in">$</span>E<span class="hljs-built_in">$</span>&#125;<br><span class="hljs-keyword">\For</span>&#123;i=1:n&#125;&#123;<br><span class="hljs-keyword">\eIf</span>&#123;max(<span class="hljs-built_in">$</span>B<span class="hljs-built_in">_</span>&#123;i&#125;<span class="hljs-built_in">$</span>) : max(<span class="hljs-built_in">$</span>B<span class="hljs-built_in">_</span>&#123;(i+4)&#125;<span class="hljs-built_in">$</span>)<span class="hljs-built_in">$</span>&gt;<span class="hljs-built_in">$</span>-80&#125;<br>&#123;<br><span class="hljs-built_in">$</span>S<span class="hljs-built_in">$</span>=i; <span class="hljs-keyword">\tcp</span>*&#123;Start Point&#125;<br><span class="hljs-keyword">\For</span>&#123;j=S:n&#125;<br>&#123;<br><span class="hljs-keyword">\eIf</span>&#123;max(<span class="hljs-built_in">$</span>B<span class="hljs-built_in">_</span>&#123;j&#125;<span class="hljs-built_in">$</span>) : max(<span class="hljs-built_in">$</span>B<span class="hljs-built_in">_</span>&#123;(j+4)&#125;<span class="hljs-built_in">$</span>)<span class="hljs-built_in">$</span>&lt;<span class="hljs-built_in">$</span>-100&#125;<br>&#123;<br><span class="hljs-built_in">$</span>E<span class="hljs-built_in">$</span>=j; <span class="hljs-keyword">\tcp</span>*&#123;End Point&#125;<br>Return [<span class="hljs-built_in">$</span>S,E<span class="hljs-built_in">$</span>];<br>&#125;<br>&#123;<br>j++;<br>&#125;<br>&#125;<br>&#125;<br>&#123;<br>i++;<br>&#125;<br>&#125;<br><span class="hljs-keyword">\end</span>&#123;algorithm&#125;<br></code></pre></td></tr></table></figure><p><img src="/images/Latex.png" alt="Latex"></p>]]></content>
    
    
    <categories>
      
      <category>Writing skills</category>
      
    </categories>
    
    
    <tags>
      
      <tag>LaTex</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Compute Shader</title>
    <link href="/2024/07/12/Compute%20Shader/"/>
    <url>/2024/07/12/Compute%20Shader/</url>
    
    <content type="html"><![CDATA[<p>计算着色器是运行在<code>GPU</code>正常渲染管线之外的着色器程序，可用于大规模并行 GPGPU（General Purpose GPU）算法，或加速部分游戏渲染。</p><p><img src="/images/20240712_Concept.jpg" alt="Concept"></p>]]></content>
    
    
    <categories>
      
      <category>图形</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Shader</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo Quick Start</title>
    <link href="/2024/07/12/Hexo%20Quick%20Start/"/>
    <url>/2024/07/12/Hexo%20Quick%20Start/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <categories>
      
      <category>Writing skills</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
